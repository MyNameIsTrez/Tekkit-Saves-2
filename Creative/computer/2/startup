rednet.open("top")

colorList = {
colors.white, colors.orange, colors.magenta,
colors.lightBlue, colors.yellow, colors.lime,
colors.pink, colors.gray, colors.lightGray,
colors.cyan, colors.purple, colors.blue,
colors.brown, colors.green, colors.red,
colors.black
}

function main()
 while true do
  term.setCursorPos(1,1)
  term.clear()
  bCable = 0
  step = 0
  tempVar = 1
  
  senderId, item, protocol = rednet.receive()
  
  senderId, stacks, protocol = rednet.receive()
  print(stacks.." is type: "..type(stacks))
  --sleep(5)
  stacks = tonumber(stacks)
  print(stacks.." is now type: "..type(stacks))
  --sleep(5)
  
  for i = 1, stacks do
   if item == "stone" then
    color = colorList[1]
   elseif item == "grass" then
    color = colorList[2]
   elseif item == "dirt" then
    color = colorList[3]
   elseif item == "cobblestone" then    
    color = colorList[4]
   elseif item == "oak planks" then
    color = colorList[5]
   else
    main()
   end
   
   if type(color) ~= "nil" and tempVar == 1 then
    rednet.send(1,"working")
    tempVar = 0
   end
   
   rs.setBundledOutput("back",colors.combine(0,color))
   sleep(0.1)
   rs.setBundledOutput("back",0)
   sleep(0.3)
 
   step = tostring(i)
   rednet.send(1,step)
  end
  rednet.send(1,"restart")
 end
end

main()
