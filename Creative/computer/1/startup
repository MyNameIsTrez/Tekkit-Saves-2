rednet.open("back")
sleepTime = 3

function main()
 while true do
  term.setCursorPos(1,1)
  term.clear()
  
  write("Enter an item to request: ")
  rednet.broadcast(read())
  
  write("Enter the amount of stacks to request: ")
  stacks = read()
  stacksCheck()
  rednet.broadcast(stacks)
  
  senderId, message, protocol = rednet.receive(0)
  
  if message == "working" then
   message = 0
   while message ~= "restart" do
    senderId, message, protocol = rednet.receive()
    if type(tonumber(message)) == "number" then
     step = message
     calculateTimeLeft()
    else
     main()
    end
   end
  end
  write("You didn't enter a valid item.")
  sleep(sleepTime)
 end
end

function stacksCheck()
 stacks = tonumber(stacks)
 if type(stacks) == "number" then
  stacks = tostring(stacks)
 else
  write("You didn't enter the number of stacks.")
  rednet.broadcast("0")
  sleep(sleepTime)
  main()
 end
end

function calculateTimeLeft()
 stacks = tonumber(stacks)
 timeLeft = math.ceil((stacks / 10 - step / 10) * 4.5)
 term.setCursorPos(1,3)
 write("Time left: "..timeLeft.." seconds  ")
end

main()
